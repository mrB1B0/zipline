matrix:
  fast_finish: true

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\etc\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python34_64"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"
      PANDAS_VERSION: "0.16.1"
      NUMPY_VERSION: "1.9.2"
      CONDA_PY: "34"
      CONDA_NPY: "19"
      SCIPY_VERSION: "0.15.1"

#    - PYTHON: "C:\\Python27_64"
#      PYTHON_VERSION: "2.7"
#      PYTHON_ARCH: "32"
#      PANDAS_VERSION: "0.16.1"
#      NUMPY_VERSION: "1.9.2"
#      CONDA_PY: "27"
#      CONDA_NPY: "19"
#      SCIPY_VERSION: "0.15.1"
#
#    - PYTHON: "C:\\Python34_64"
#      PYTHON_VERSION: "3.4"
#      PYTHON_ARCH: "32"
#      PANDAS_VERSION: "0.17.1"
#      NUMPY_VERSION: "1.10.2"
#      CONDA_PY: "34"
#      CONDA_NPY: "19"
#      SCIPY_VERSION: "0.16.1"
#
#    - PYTHON: "C:\\Python27_64"
#      PYTHON_VERSION: "2.7"
#      PYTHON_ARCH: "32"
#      PANDAS_VERSION: "0.17.1"
#      NUMPY_VERSION: "1.10.2"
#      CONDA_PY: "27"
#      CONDA_NPY: "19"
#      SCIPY_VERSION: "0.16.1"
#
#    - PYTHON: "C:\\Python34_64"
#      PYTHON_VERSION: "3.4"
#      PYTHON_ARCH: "32"
#      PANDAS_VERSION: "0.16.1"
#      NUMPY_VERSION: "1.9.2"
#      CONDA_PY: "64"
#      CONDA_NPY: "19"
#      SCIPY_VERSION: "0.15.1"
#
#    - PYTHON: "C:\\Python27_64"
#      PYTHON_VERSION: "2.7"
#      PYTHON_ARCH: "32"
#      PANDAS_VERSION: "0.16.1"
#      NUMPY_VERSION: "1.9.2"
#      CONDA_PY: "64"
#      CONDA_NPY: "19"
#      SCIPY_VERSION: "0.15.1"
#
#    - PYTHON: "C:\\Python34_64"
#      PYTHON_VERSION: "3.4"
#      PYTHON_ARCH: "32"
#      PANDAS_VERSION: "0.17.1"
#      NUMPY_VERSION: "1.10.2"
#      CONDA_PY: "64"
#      CONDA_NPY: "19"
#      SCIPY_VERSION: "0.16.1"
#
#    - PYTHON: "C:\\Python27_64"
#      PYTHON_VERSION: "2.7"
#      PYTHON_ARCH: "64"
#      PANDAS_VERSION: "0.17.1"
#      NUMPY_VERSION: "1.10.2"
#      CONDA_PY: "27"
#      CONDA_NPY: "19"
#      SCIPY_VERSION: "0.16.1"


# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable (which is used by CMD_IN_ENV).
platform:
  - x64

cache:
  - '%LOCALAPPDATA%\pip\Cache'

# all our python builds have to happen in tests_script...
build: false

init:
  - "ECHO %PYTHON_VERSION% %PYTHON%"

install:
  # this installs the appropriate Miniconda (Py2/Py3, 32/64 bit),
  - powershell .\etc\install.ps1
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

  - cmd: conda update -q conda
  - conda info -a
  - conda install conda-build=1.19.0 --yes
  - ps: $NPY_VERSION_ARR=$env:NUMPY_VERSION -split '.', 0, 'simplematch'
  - ps: $env:NPY_VERSION_MAJ_MIN=$NPY_VERSION_ARR[0..1] -join ""
  - cmd: '%CMD_IN_ENV% conda build conda/bcolz -q --python=%PYTHON_VERSION% --numpy=%NPY_VERSION_MAJ_MIN%'
  - cmd: '%CMD_IN_ENV% conda build conda/cyordereddict -q --python=%PYTHON_VERSION% --numpy=%NPY_VERSION_MAJ_MIN%'
  - cmd: '%CMD_IN_ENV% conda build conda/logbook -q --python=%PYTHON_VERSION% --numpy=%NPY_VERSION_MAJ_MIN%'
  - cmd: '%CMD_IN_ENV% conda build conda/ta-lib -q --python=%PYTHON_VERSION% --numpy=%NPY_VERSION_MAJ_MIN%'
  - cmd: '%CMD_IN_ENV% conda build conda/zipline --python=%PYTHON_VERSION% --numpy=%NPY_VERSION_MAJ_MIN%'

  - cmd: conda create -n testenv --yes --use-local pip numpy=%NUMPY_VERSION% scipy=%SCIPY_VERSION% ta-lib=0.4.9
  - cmd: activate testenv
  - cmd: pip install --upgrade pip coverage coveralls
  - cmd: pip install -r etc/requirements.txt
  - cmd: pip install -r etc/requirements_dev.txt
  # this uses git requirements right now
  - cmd: pip install -r etc/requirements_blaze.txt
  - cmd: pip install -e .[talib]
  - cmd: pip freeze | sort

test_script:
  - nosetests tests/
  - flake8 zipline tests
